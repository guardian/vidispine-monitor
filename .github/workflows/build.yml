name: Build and Upload vidispine-monitor

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      checks: write
      pull-requests: write
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Make GITHUB_RUN_NUMBER env var available outside of shells
        working-directory: ${{env.GITHUB_WORKSPACE}}
        shell: bash
        run: |
          echo GITHUB_RUN_NUMBER=$(( GITHUB_RUN_NUMBER + 22 )) >> $GITHUB_ENV
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: GHA-build

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build
        run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o vidispine-monitor.amd64

      - name: Debug
        run: echo $PWD; ls -lhd vidispine-monitor*

      - name: Test
        run: go test -v ./...

      - name: ECR Login
        run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - run: docker build . -t "guardianmultimedia/vidispine-monitor:${{ env.GITHUB_RUN_NUMBER }}"

      - name: Tag Docker image vidispine-monitor
        run: docker tag guardianmultimedia/vidispine-monitor:${{ env.GITHUB_RUN_NUMBER }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/vidispine-monitor:${{ env.GITHUB_RUN_NUMBER }}

      - name: Push Docker image vidispine-monitor
        run: docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/vidispine-monitor:${{ env.GITHUB_RUN_NUMBER }}

      - name: Output build-info.yaml
        uses: fredex42/pluto-build-info@v1.0
        with:
          builtimage: AWS_ACCOUNT_ID.dkr.ecr.AWS_REGION.amazonaws.com/vidispine-monitor:${{ env.GITHUB_RUN_NUMBER }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check the output
        run: cat build-info.yaml

      - name: Upload build info
        uses: actions/upload-artifact@v3
        with:
          name: build-info
          path: build-info.yaml
